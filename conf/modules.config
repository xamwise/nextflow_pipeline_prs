/*
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Config file for defining DSL2 per module options and publishing paths
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Available keys to override module options:
        ext.args   = Additional arguments appended to command in module.
        ext.args2  = Second set of arguments appended to command in module (multi-tool modules).
        ext.args3  = Third set of arguments appended to command in module (multi-tool modules).
        ext.prefix = File name prefix for output files.
----------------------------------------------------------------------------------------
*/

process {

    publishDir = [
        path: { "${params.outdir}/${params.run_id}/${task.process.tokenize(':')[-1].tokenize('_')[0].toLowerCase()}" },
        mode: params.publish_dir_mode,
        saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
    ]

    withName: 'LOAD_RESPONSE' {
        publishDir = [
            path: params.path_data,
            mode: params.publish_dir_mode,
            saveAs: { filename -> (filename != 'versions.yml' && !filename.endsWith('pkl')) ? filename : null }
        ]
    }

    withName: 'PREPROCESS_RAW_VIABILITY' {
        publishDir = [
            path: { params.path_data },
            mode: params.publish_dir_mode,
            saveAs: { filename -> null }
        ]
    }

    withName: 'FIT_CURVES' {
        publishDir = [
            path: { params.path_data },
            mode: params.publish_dir_mode,
            saveAs: { filename -> null }
        ]
    }

    withName: 'CV_SPLIT' {
        publishDir = [
            path: { params.path_data },
            mode: params.publish_dir_mode,
            saveAs: { filename -> null }
        ]
    }

    withName: 'MAKE_MODELS' {
        publishDir = [
            path: params.outdir,
            mode: params.publish_dir_mode,
            saveAs: { filename -> null }
        ]
    }

    withName: 'MAKE_BASELINES' {
        publishDir = [
            path: params.outdir,
            mode: params.publish_dir_mode,
            saveAs: { filename -> null }
        ]
    }

    withName: 'HPAM_SPLIT' {
        publishDir = [
            path: params.outdir,
            mode: params.publish_dir_mode,
            saveAs: { filename -> null }
        ]
    }


    withName: 'TRAIN_AND_PREDICT_CV' {
        publishDir = [
            path: params.outdir,
            mode: params.publish_dir_mode,
            saveAs: { filename -> null }
        ]

        ext.use_gpu = { [
            'SimpleNeuralNetwork',
            'MultiOmicsNeuralNetwork',
            'MOLIR',
            'SuperFELTR',
            'DIPK'
            ].contains( model_name.split( '\\.' )[0] )
        }
    }

    withName: 'EVALUATE_FIND_MAX' {
        publishDir = [
            path: params.outdir,
            mode: params.publish_dir_mode,
            saveAs: { filename -> null }
        ]
    }

    withName: 'PREDICT_FULL' {
        ext.use_gpu = { [
            'SimpleNeuralNetwork',
            'MultiOmicsNeuralNetwork',
            'MOLIR',
            'SuperFELTR'
            ].contains( model_name.split( '\\.' )[0] )
        }
    }

    withName: 'RANDOMIZATION_SPLIT' {
        publishDir = [
            path: params.outdir,
            mode: params.publish_dir_mode,
            saveAs: { filename -> null }
        ]
    }

    withName: 'RANDOMIZATION_TEST' {
        ext.use_gpu = { [
            'SimpleNeuralNetwork',
            'MultiOmicsNeuralNetwork',
            'MOLIR',
            'SuperFELTR',
            'DIPK'
            ].contains( model_name.split( '\\.' )[0] )
        }
    }

    withName: 'ROBUSTNESS_TEST' {
        ext.use_gpu = { [
            'SimpleNeuralNetwork',
            'MultiOmicsNeuralNetwork',
            'MOLIR',
            'SuperFELTR',
            'DIPK'
            ].contains( model_name.split( '\\.' )[0] )
        }
    }

    withName: 'EVALUATE_FINAL' {
        publishDir = [
            path: params.outdir,
            mode: params.publish_dir_mode,
            saveAs: { filename -> null }
        ]
    }

    withName: 'WRITE_HTML' {
        publishDir = [
            path: { "${params.outdir}/${params.run_id}" },
            mode: 'copy',
            saveAs: { filename -> filename }
        ]
    }

    withName: 'WRITE_INDEX' {
        publishDir = [
            path: { "${params.outdir}/${params.run_id}" },
            mode: 'copy',
            saveAs: { filename -> filename }
        ]
    }
}
